{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00d6sterreichisches Klimatool f\u00fcr Analyse und Visualisierung (OKTAV) General information and help regarding OKTAV software The documentation is under construction and therefore not final. Build: 28.02.2020","title":"Welcome"},{"location":"#welcome","text":"\u00d6sterreichisches Klimatool f\u00fcr Analyse und Visualisierung (OKTAV) General information and help regarding OKTAV software The documentation is under construction and therefore not final. Build: 28.02.2020","title":"Welcome"},{"location":"about/","text":"","title":"About"},{"location":"changelog/","text":"","title":"Changelog"},{"location":"climdata/","text":"","title":"Climate data"},{"location":"database/","text":"Database Database of OKTAV webgui For the OKTAV Django application the default sqlite3 database is used. At the moment there is no need for a more robust database like PostgreSQL or MySQL because from the user side it's not planned to write anything to the database. sqlite3 commands Here is a very basic list of the most useful commands for sqlite3 'python manage.py dbshell' # Enter sqlite db shell, you must be in the directory where manage.py is Inside the db shell: '.tables' # Get a list of tables '.schema {table_name}' # Get scheme of a table 'CREATE TABLE IF NOT EXISTS \"table_name\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"field1\" varchar(10) NOT NULL, \"field2\" varchar(20) NOT NULL);' # Insert new table '.quit' # Quit db shell","title":"Database"},{"location":"database/#database","text":"","title":"Database"},{"location":"database/#database-of-oktav-webgui","text":"For the OKTAV Django application the default sqlite3 database is used. At the moment there is no need for a more robust database like PostgreSQL or MySQL because from the user side it's not planned to write anything to the database.","title":"Database of OKTAV webgui"},{"location":"database/#sqlite3-commands","text":"Here is a very basic list of the most useful commands for sqlite3 'python manage.py dbshell' # Enter sqlite db shell, you must be in the directory where manage.py is Inside the db shell: '.tables' # Get a list of tables '.schema {table_name}' # Get scheme of a table 'CREATE TABLE IF NOT EXISTS \"table_name\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"field1\" varchar(10) NOT NULL, \"field2\" varchar(20) NOT NULL);' # Insert new table '.quit' # Quit db shell","title":"sqlite3 commands"},{"location":"portal_general/","text":"","title":"General"},{"location":"portal_instructions/","text":"","title":"Instuctions"},{"location":"vcontrol/","text":"Version control happens on the internal ZAMG GitLab server: Link to ZAMG GitLab (Login required)","title":"Version control"}]}